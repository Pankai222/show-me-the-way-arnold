// <auto-generated />
using System;
using Arnold_Web_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Arnold_Web_API.Migrations
{
    [DbContext(typeof(WorkoutdbContext))]
    partial class WorkoutdbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasCharSet("latin1")
                .UseCollation("latin1_swedish_ci")
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("Arnold_Web_API.Models.Contact", b =>
                {
                    b.Property<int>("IdContact")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idContact");

                    b.Property<int>("CreatorIdCreator")
                        .HasColumnType("int(11)")
                        .HasColumnName("Creator_idCreator");

                    b.Property<string>("Emailaddress")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Phonenumber")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("IdContact", "CreatorIdCreator")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "CreatorIdCreator" }, "fk_Contact_Creator1_idx");

                    b.ToTable("contact");

                    b
                        .HasCharSet("utf8")
                        .UseCollation("utf8_general_ci");
                });

            modelBuilder.Entity("Arnold_Web_API.Models.Creator", b =>
                {
                    b.Property<int>("IdCreator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idCreator");

                    b.Property<string>("Firstname")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("firstname");

                    b.Property<string>("Lastname")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("lastname");

                    b.HasKey("IdCreator")
                        .HasName("PRIMARY");

                    b.ToTable("creator");

                    b
                        .HasCharSet("utf8")
                        .UseCollation("utf8_general_ci");
                });

            modelBuilder.Entity("Arnold_Web_API.Models.Exercise", b =>
                {
                    b.Property<int>("Idexercise")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idexercise");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("category");

                    b.Property<sbyte>("Compound")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("compound");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("name");

                    b.HasKey("Idexercise")
                        .HasName("PRIMARY");

                    b.ToTable("exercise");

                    b
                        .HasCharSet("utf8")
                        .UseCollation("utf8_general_ci");
                });

            modelBuilder.Entity("Arnold_Web_API.Models.WorkoutRoutine", b =>
                {
                    b.Property<int>("IdworkoutRoutine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idworkout_routine");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("create_date");

                    b.Property<int?>("CreatorIdCreator")
                        .HasColumnType("int(11)")
                        .HasColumnName("Creator_idCreator");

                    b.Property<int?>("Difficulty")
                        .HasColumnType("int(11)")
                        .HasColumnName("difficulty");

                    b.Property<string>("Duration")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("duration");

                    b.Property<string>("Name")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("name");

                    b.HasKey("IdworkoutRoutine")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CreatorIdCreator" }, "fk_workout_routine_Creator1_idx");

                    b.ToTable("workout_routine");

                    b
                        .HasCharSet("utf8")
                        .UseCollation("utf8_general_ci");
                });

            modelBuilder.Entity("Arnold_Web_API.Models.WorkoutRoutineHasExercise", b =>
                {
                    b.Property<int>("WorkoutRoutineIdworkoutRoutine")
                        .HasColumnType("int(11)")
                        .HasColumnName("workout_routine_idworkout_routine");

                    b.Property<int>("ExerciseIdexercise")
                        .HasColumnType("int(11)")
                        .HasColumnName("exercise_idexercise");

                    b.Property<int?>("Repetitions")
                        .HasColumnType("int(11)")
                        .HasColumnName("repetitions");

                    b.Property<int?>("Sets")
                        .HasColumnType("int(11)")
                        .HasColumnName("sets");

                    b.HasKey("WorkoutRoutineIdworkoutRoutine", "ExerciseIdexercise")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "ExerciseIdexercise" }, "fk_workout_routine_has_exercise_exercise1_idx");

                    b.HasIndex(new[] { "WorkoutRoutineIdworkoutRoutine" }, "fk_workout_routine_has_exercise_workout_routine1_idx");

                    b.ToTable("workout_routine_has_exercise");

                    b
                        .HasCharSet("utf8")
                        .UseCollation("utf8_general_ci");
                });

            modelBuilder.Entity("Arnold_Web_API.Models.Contact", b =>
                {
                    b.HasOne("Arnold_Web_API.Models.Creator", "CreatorIdCreatorNavigation")
                        .WithMany("Contacts")
                        .HasForeignKey("CreatorIdCreator")
                        .HasConstraintName("fk_Contact_Creator1")
                        .IsRequired();

                    b.Navigation("CreatorIdCreatorNavigation");
                });

            modelBuilder.Entity("Arnold_Web_API.Models.WorkoutRoutine", b =>
                {
                    b.HasOne("Arnold_Web_API.Models.Creator", null)
                        .WithMany("WorkoutRoutines")
                        .HasForeignKey("CreatorIdCreator");
                });

            modelBuilder.Entity("Arnold_Web_API.Models.WorkoutRoutineHasExercise", b =>
                {
                    b.HasOne("Arnold_Web_API.Models.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseIdexercise")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Arnold_Web_API.Models.WorkoutRoutine", null)
                        .WithMany("WorkoutRoutineHasExercises")
                        .HasForeignKey("WorkoutRoutineIdworkoutRoutine")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("Arnold_Web_API.Models.Creator", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("WorkoutRoutines");
                });

            modelBuilder.Entity("Arnold_Web_API.Models.WorkoutRoutine", b =>
                {
                    b.Navigation("WorkoutRoutineHasExercises");
                });
#pragma warning restore 612, 618
        }
    }
}
